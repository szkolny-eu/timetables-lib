name: Publish Python Package

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install test dependencies
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            black
            isort
      - name: Check code with black
        run: black --check .
      - name: Check code with isort
        run: isort --profile black . --check-only

  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install publish dependencies
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          poetry

    - name: Build and publish
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry install
        poetry build
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish

    - name: Get release info
      id: release
      uses: abatilo/release-info-action@v1.3.0
      with:
        owner: szkolny-eu
        repo: timetables-lib

    - name: Read version name
      id: version
      run: echo "::set-output name=version::${{ steps.release.outputs.latest_tag }}" | sed 's/::v/::/'

    - name: Upload workflow artifact
      uses: actions/upload-artifact@v2
      with:
        name: timetables-lib-${{ steps.release.outputs.latest_tag }}
        path: |
          dist/*.whl
          dist/*.tar.gz

    - name: Upload GitHub release asset
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
